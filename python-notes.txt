python is case-sensitive
python is dynamically typed langauge

there are 33 keywords:

>>import keyword
>>> print(keyword.kwlist)

['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']


vedio 5 :
=========

14 datatypes:
-------------
int
float
complex
bool
str
bytes
bytearray
range
list
tuple
set
frozenset
dict
None

All datatypes are object
we can use id() method to print the object address of the datatype variable passed.

inbuilt methods:
----------------
print()
type()
id()

int datatype:
long datatype is only available in python 2 and not in 3. We should use int datatype object/class only to represent in long.
there are 4 forms to reperesent int datatype
	- decimal (base 10 - this is default form - 0 to 9)
	- binary (base 2 - 0 and 1 - ex: a=0b1111 or a=0B1111 - 0b/0B prefixed - print(a) will give 15 - printing happens in decimal value - negative also handled -0B1111)
	- oct (base 8 - 0 to 7 - a=0o777 or a=0O777)
	- hexa (base 16 - 0 to 9, a to f or A to F - 0xFace or 0XFace) 

Note: for any form (binary, octal, hexa), python will give output only in decimal form




vedio 6 :
==================

recap: basics, features, identifiers, all datatypes, int datatype

Note:
there is not size or range in python like other languages.
we can give x=9999999999999999999999999999999 
type(x) will give int

there is no concept of size or range in python, reason is:
in java: int x = 10;
so, here x is primitive type and any primitive type will have size and range

same in java: Student s = new Student;
Now, s is referencing to Student object in memory, so inside student object there could many memory space used, which is variable in nature. And there is size defined exactly for this object in java. So for object there is no size or range.

*** Now in python everything is an object. so in pyhton there is no concept of size, range , min or max. All datatypes are object. ***


Base conversions:
To convert one base form to another base form.
bin() - from any base to binary
oct() - from any base to octal
hex() - from any base to hexa

>> x=10
>> bin(x)
>> bin(15)
>> bin(0o777)
>> 
>> oct(786) 786 is decimal
>> oct(0XFace)
>> oct(0B11111)

>> hex(10)
'0xa'

>> hex(16789)
'0x4195'

float data type: number with decimal point
----------------

salary: 2345.67
desiel price: 65.25

>> f=123.456
>> type(f)

>> f=0X123.456
>> f=0o123.456
Here, python will throw error, because float point type with octal or hexa or binary is not suppported.

So, in python for float only decimal (base 10) is supported. no support for base6, base8 or base16 like in int datatype.

one more point: 
Exponentail form ==> 1.2e3
i.e., 1.2 * 10 pow 3
i.e., 1.2 * 1000
i.e., 1200

this support is there in float. we represent exponentail form in float

>> f=1.2e3
>> 1200.0

hint: the decimal point shifted 3 times towards right. 1.2 * 1000 = 1200.0

for bigger exponentail like:
>> f=1.2e100
>> print(f)
1.2e+100

in python it is easier to represent bigger values



complex data type:
------------------

a+bj

a is called Real part
b is called Imaginary part

what is the value of j ? 
j^2 = -1
in mathematics it is, j = âˆš-1 .... hint shortcut key on mac for square root alt+V

to develop mathematics based program/appliaction/scentific , python is best

here, a and b can int value or float value

x=10+20j
x
(10+20j)
type(x)
complex

y=10.5+2.3j
j
error : name j is not defind

>> y
(10.5+2.3j)

Now, do we need compulsaory use 'j' only in the expression

>> x=10+20i
syntaxError: invalid syntax

>> x=10+20j

So, only 'j' is allowed. it is been designed in that way.
by default in python only j is expected.

x=10+j20
error

j should be after the number/variable


in real part, if we use int value we can use bi, oct or hexa form also
in imaginary part, only decimal (base 10) is allowed

a=0B1111+20j
valid

a=15+0B1111j
synax error: invalid

a=10+20j
b=20+30j
a+b
(30+50j)
a-b
(-10-10j)

a*b (something is happening dont worry for now)

a=10+20j
Now how to the real part number?
a.real
10.0
a.imag
20.0    (value is stored in float type)

complex datatype has inbuilt attribute for represent real and imaginary parts


bool data type: 
---------------

logical type, True or False

T and F are upper case

b=True
type(b)
bool

a=10
b=20
c=a<b
c
True

True+True ==> 2
True+False ==> 1

internally at memory level True is treated as 1 and False as 0.


str datatype: sequence of characters
-------------

s='manju'
or
s="manju"
s
manju
type(s)
str

here we can use single qoute or double qoute. Convention is single qoute but java developer will do in double qoute. bith are fine.

but if you in double qoute, python will take it in single qoute only
>> s="manju"
>> s
'manju'

Example:

"manju
	software"

This is valid are not.
python will give left and right because the above example has multi line string literal. There are 2 lines.

so to represent multiline string literal we have to enclose in three single qoute or three double qoute.

'''manju
		software'''

or

"""manju
	software"""		

to do same in java, we have to use '/n' in the middle of the string.


Now how to print:
Manju Sir "Python" classes are helpful

in above example Python is enclosed with double qoutes.
so, we can now enclose whole string in three single are double quotes.
and the double qoute inside the string will never be treated as endind string (as in java).
So, in python there will be no question/problem of escape sequence characters.

s='''Manju Sir "Python" classes are helpful'''
s
'Manju Sir "Python" classes are helpful'


slice operator: slice is one piece
--------------

this applicable for string, for any collections.

s="Manju software solutions"
s[2:8]




vedio 7:
=================

Recap of datatypes:

True/True ==> 1.0
True/False ===> zero division error

Str:

there is no char type in python, we should use str only for char.

Slice Operator: it is a piece. it is substring
---------------

slice is most commonly used. slice is used for string and collection also.
s='manju'
we need to access by index
index will always starts with 0 (zero) only

 _ _ _ _ _
|m|a|n|j|u|
 - - - - -
 0 1 2 3 4   ==> index

 s[0]
 'm'

 s[3]
 n

 there is specality in python in index. +ve index and -ve index

 +ve index right to left - 0 to 4
 -ve index left to right -1 to -5

-5  -4  -3 -2 -1   ==> -ve index
  _  _  _  _  _
| m| a| n| j| u|
  -  -  -  -  -
 0  1  2  3   4   ==> +ve index


s[-1]
u

s[-5]
m

for List also same concept is applicable.

substring
---------
s[begin:end]
returns substring from begin index to end-1 index
end index is exclusive

s[1:4]
'anj'

s[2:4]
'nj'

s[1:]
anju
here, end is by default is end of the index.
end is optional

s[3:]
'ju'

s[:4]
'manj'
now begin is start of index is 0.
so begin is also optional.

s[:]
'manju'
we didnt specify begin or end. it will return whole string


s[-1:-4]
''

we get empty because begin value should be lower and end value should be higher.

s[-4:-1]
'anj'


s[1:100]
'anju'
now end index is higher and not there, in this case it will consider end index has end.
And it won't throw any error.


s[begin:end:step]
step is jump
by default step is 1 and it jumps by 1 char at a time

>>> s='manjusoftwaresolutions'
>>> s[1:10]
'anjusoftw'

>>> s[1:10:2]
'ajsfw'

here, step is 2, char are extracted by jumping by 2

s='manju'

now how can i get 'manju' 10 times
like manjumanjumanju.....

how this can be achieved in other languages like java... in loops we need to concat 10 times


In python it is just.... s*10
here * is repeatation operator
10 is how many times in need to repeat


This are great flexiblity in python.


recap:
str
index
slice
*
len(s) - this gives length of string s.

Note:
All the datatypes that we have covered is immutable. for now we will keep this point later we will revisit.

datatype:
---------

int
float
complex
bool
str

1. the above 5 datatypes are called as Python's fundamental data types

2. even char values are str type only

3. long is not available in python 3. even long is supported as int type only



Type Casting:  (Or Type coersion)
-------------

int to float
float to int
int to str
str to int

any kind of convertion, how can we do this and what are the methods.


Python has inbuilt function to convert one type to another type:

int()
float()
complex()
bool()
str()

int():
------

to convert any other type to int type

int(123.456)
123

int(10+20j)
we can't do this, complex can't to be converted to int
TypeError: can't convert complex to int

int(True)
1

int(False)
0

int("10")
10

int("10.5")
not possible, only int value should represented in the string
two point:
	- string value should be int 
	- and the value should be in base 10
ValueError: invalid literal for int() with base 10: '10.5'


int("0B1111")
ValueError: invalid literal for int() with base 10: '0B1111'

value should be in decimal only


float():
---------

float(10)
10.0

float(10+20j)
TypeError

float(True)
1.0

float(False)
0.0

float("10")
10.0

float("10.5")
10.5

float("then")
valueError: couldn't convert

float("0b1111")
valueError:
only base 10 is supported

we can covert any type to float except complex



Vedio 8:
=================


















































